
import Head from "next/head";
import styled from "@emotion/styled";
import Link from "next/link"
import { components } from "../lib/components"
import { css } from "@emotion/react";

export interface PageProps {
  children: React.ReactNode;
  title?: string;
  description?: string;
  noPad?: boolean;
  sidebar?: boolean;
}

const sidebarLinkCss = css`
display: block;
cursor: pointer;
padding: 0.5rem;
font-weight: bold;
`

const SidebarLink = ({ href, ...props }) => {
  return (
    <Link href={href}>
      <a css={sidebarLinkCss} {...props} />
    </Link>
  )
}

const Sidebar = styled.div`
flex: 0 0 10em;
background-color: lightgray;
`

const Wrapper = styled.div`
display: flex;
min-height: 100vh;
`

const Main = styled.main`
flex: 1 1 auto;
`

const HBar = styled.hr`
border: none;
border-bottom: 1px solid lightgray;
`

export const Page: React.FC<PageProps> = ({
  title,
  description,
  sidebar = true,
  noPad,
  children
}) => {
  const sidebarElements = (
    <Sidebar>
      <SidebarLink href="/">Home</SidebarLink>
      <HBar />
      {components.map(comp => <SidebarLink key={comp.name} href={`/component/${comp.name}`}>{comp.title}</SidebarLink>)}
    </Sidebar>
  );
  return (
    <Wrapper>
      <Head>
        {title && <title>{title}</title>}
        {description && <meta name="description" content="Generated by create next app" />}
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={{ flex: '1 1 auto', display: 'flex', flexWrap: 'wrap' }}>
        {sidebar && sidebarElements}
        <Main style={{ padding: noPad ? '0' : '2em' }}>
          {children}
        </Main>
      </div>
    </Wrapper>
  );
}

export default Page;
