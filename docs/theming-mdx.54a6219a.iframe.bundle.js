"use strict";(self.webpackChunkgearsui=self.webpackChunkgearsui||[]).push([[577],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/theming.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>theming});var react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),ColorPicker=(__webpack_require__("./src/theme.css"),__webpack_require__("./src/ColorPicker.tsx"));function CSSColorField({value,onUpdate}){return(0,jsx_runtime.jsx)(ColorPicker.z,{value})}function ThemeEditor(){const[primaryColor,setPrimaryColor]=(0,react.useState)(null),[secondaryColor,setSecondaryColor]=(0,react.useState)(null),[defaultColor,setDefaultColor]=(0,react.useState)(null);return(0,jsx_runtime.jsxs)("form",{onSubmit:e=>{e.preventDefault()},children:[(0,jsx_runtime.jsx)(CSSColorField,{value:primaryColor,onUpdate:setPrimaryColor}),(0,jsx_runtime.jsx)(CSSColorField,{value:secondaryColor,onUpdate:setSecondaryColor}),(0,jsx_runtime.jsx)(CSSColorField,{value:defaultColor,onUpdate:setDefaultColor})]})}function _createMdxContent(props){const _components=Object.assign({h1:"h1"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Meta/Theming"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"theming",children:"Theming"}),"\n",(0,jsx_runtime.jsx)(ThemeEditor,{})]})}CSSColorField.displayName="CSSColorField",ThemeEditor.displayName="ThemeEditor";const theming=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);